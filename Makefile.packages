ARCH = $(shell uname -m | sed 's/i.86/i386/')
NPROC = $(shell nproc)
MAKEFLAGS += -j$(NPROC)

PACKAGES = bash bearssl binutils bzip2 curl gawk linux-headers muxzcat perl

.PHONY: help test-host $(PACKAGES)

help:
	@echo "Please run 'make <target>' where <target> is one of the following:"
	@echo "  $(PACKAGES)"

/src/tarballs/gawk-5.3.0.tar.xz:
	@echo "Downloading gawk source code..."
	wget http://ftp.gnu.org/gnu/gawk/gawk-5.3.0.tar.xz -O $@

gawk-5.3.0: /src/tarballs/gawk-5.3.0.tar.xz
	tar -xf $<

/usr/local/bin/gawk: gawk-5.3.0
	@echo "Bootstrapping gawk -> /src/logs/boot_gawk.log"
	(cd $< && ./configure --disable-shared && $(MAKE) && $(MAKE) install) > /src/logs/boot_gawk.log 2>&1
	ln -sf /usr/local/bin/gawk /usr/local/bin/awk

gawk: /usr/local/bin/gawk

/src/tarballs/binutils-2.27.tar.bz2:
	@echo "Downloading binutils source code..."
	wget http://ftp.gnu.org/gnu/binutils/binutils-2.27.tar.bz2 -O $@

binutils-2.27: /src/tarballs/binutils-2.27.tar.bz2
	tar -xf $<

/usr/local/bin/ar: binutils-2.27
	@echo "Bootstrapping binutils -> /src/logs/boot_binutils.log"
	(cd $< && ./configure --disable-gprofng CFLAGS=-D__LITTLE_ENDIAN__=1 && \
		$(MAKE) MAKEINFO=true && $(MAKE) MAKEINFO=true install) > /src/logs/boot_binutils.log 2>&1

binutils: /usr/local/bin/ar

/src/tarballs/bzip2-1.0.8.tar.gz:
	@echo "Downloading bzip2 source code..."
	wget http://mirrors.kernel.org/sourceware/bzip2/bzip2-1.0.8.tar.gz -O $@

bzip2-1.0.8: /src/tarballs/bzip2-1.0.8.tar.gz
	tar -xf $<

/usr/local/bin/bzip2: bzip2-1.0.8
	@echo "Bootstrapping bzip2 -> /src/logs/boot_bzip2.log"
	(cd $< && $(MAKE) CC=cc && $(MAKE) install) > /src/logs/boot_bzip2.log 2>&1

bzip2: /usr/local/bin/bzip2

/src/tarballs/linux-headers-4.19.88.tar.xz:
	@echo "Downloading linux-headers source code..."
	wget http://ftp.barfooze.de/pub/sabotage/tarballs/linux-headers-4.19.88.tar.xz -O $@

linux-headers-4.19.88: /src/tarballs/linux-headers-4.19.88.tar.xz
	tar -xf $<

/usr/local/include/linux: linux-headers-4.19.88
	@echo "Bootstrapping linux-headers -> /src/logs/boot_linux-headers.log"
	(cd $< && $(MAKE) install ARCH=$(ARCH)) > /src/logs/boot_linux-headers.log 2>&1

linux-headers: /usr/local/include/linux

/src/tarballs/bash-5.2.21.tar.gz:
	@echo "Downloading bash source code..."
	wget http://ftp.gnu.org/gnu/bash/bash-5.2.21.tar.gz -O $@

bash-5.2.21: /src/tarballs/bash-5.2.21.tar.gz
	tar -xf $<

/bin/bash: bash-5.2.21
	@echo "Bootstrapping bash -> /src/logs/boot_bash.log"
	(cd $< && ./configure --prefix=/ --without-bash-malloc && $(MAKE) && $(MAKE) install) > /src/logs/boot_bash.log 2>&1

bash: /bin/bash

muxzcat: muxzcat.c
	cc -o /usr/local/bin/xzcat $<

/src/tarballs/perl-5.38.2.tar.xz:
	@echo "Downloading perl source code..."
	wget http://mirrors.kernel.org/CPAN/src/5.0/perl-5.38.2.tar.xz -O $@

perl-5.38.2: /src/tarballs/perl-5.38.2.tar.xz
	tar -xf $<

/usr/local/bin/perl: perl-5.38.2
	@echo "Bootstrapping perl -> /src/logs/boot_perl.log"
	(cd $< && ./Configure -des -Uusenm -Uusedl -DEBUGGING=both && \
		$(MAKE) && $(MAKE) install) > /src/logs/boot_perl.log 2>&1

perl: /usr/local/bin/perl

/src/tarballs/bearssl-0.6.tar.gz:
	@echo "Downloading bearssl source code..."
	wget http://tar.sabo.xyz/bearssl/bearssl-0.6.tar.gz -O $@

bearssl-0.6: /src/tarballs/bearssl-0.6.tar.gz
	tar -xf $<

/usr/local/lib/libbearssl.a: bearssl-0.6
	@echo "Bootstrapping bearssl -> /src/logs/boot_bearssl.log"
	(cd $< && $(MAKE) && mkdir -p /usr/local/lib /usr/local/include && \
		cp -f build/libbearssl.a /usr/local/lib/ && cp -f inc/*.h /usr/local/include/) > /src/logs/boot_bearssl.log 2>&1

bearssl: /usr/local/lib/libbearssl.a

/src/tarballs/curl-8.0.1.tar.xz:
	@echo "Downloading curl source code..."
	wget http://tar.sabo.xyz/curl/curl-8.0.1.tar.xz -O $@

curl-8.0.1: /src/tarballs/curl-8.0.1.tar.xz
	tar -xf $<

/usr/local/bin/curl: curl-8.0.1 /usr/local/lib/libbearssl.a
	@echo "Bootstrapping curl -> /src/logs/boot_curl.log"
	(cd $< && ./configure --disable-docs --disable-manual --disable-shared --with-bearssl && \
		$(MAKE) && $(MAKE) install) > /src/logs/boot_curl.log 2>&1

curl: /usr/local/bin/curl

make:
	true

test-host: bash
	cd test-cc && $(MAKE) -j1 ARCH=$(ARCH) && $(MAKE) clean
	cd lib/toybox && TEST_HOST=1 USER=root scripts/test.sh && rm -rf generated/testdir
	@echo "All tests passed!"
